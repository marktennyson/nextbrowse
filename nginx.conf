server {
    listen 80;
    server_name localhost;

    client_max_body_size 10G;

    # -------------------------------
    # Direct file access (public URLs)
    # -------------------------------
    location /files/ {
        alias /app/static/;

        sendfile on;
        tcp_nopush on;
        aio on;

        expires 1d;
        add_header Cache-Control "public, immutable";

        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
    }

    # -------------------------------
    # Direct download (force download)
    # -------------------------------
    location /download/ {
        alias /app/static/;

        add_header Content-Disposition "attachment";
        add_header X-Content-Type-Options "nosniff";

        sendfile on;
        tcp_nopush on;
        aio on;

        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # -------------------------------
    # Go backend (filesystem ops API)
    # -------------------------------
    location ^~ /api/fs/ {
        proxy_pass http://go-backend:9932;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        client_max_body_size 10G;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        # CORS for API (allow any origin; echo Origin header)
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        # Handle preflight directly
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # -------------------------------
    # Go backend (TUS resumable uploads)
    # -------------------------------
    # Match both with and without trailing slash to be safe
    location ^~ /api/tus/ {
        proxy_pass http://go-backend:9932;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        client_max_body_size 10G;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        # CORS for API (allow any origin; echo Origin header)
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        # Handle preflight directly
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    location ^~ /api/tus {
        proxy_pass http://go-backend:9932;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        client_max_body_size 10G;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # -------------------------------
    # Go backend healthcheck
    # -------------------------------
    location /health {
        proxy_pass http://go-backend:9932;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # -------------------------------
    # Next.js API routes
    # -------------------------------
    location /api/ {
        proxy_pass http://nextjs:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # -------------------------------
    # Next.js static assets
    # -------------------------------
    location /_next/ {
        proxy_pass http://nextjs:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # -------------------------------
    # Fallback â†’ Next.js frontend
    # -------------------------------
    location / {
        proxy_pass http://nextjs:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # -------------------------------
    # Security headers
    # -------------------------------
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # -------------------------------
    # Gzip compression
    # -------------------------------
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        text/x-js;
}
